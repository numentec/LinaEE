version: '2.1'

services:
  # MariaDB service
  mariadb:
    container_name: linadb
    image: ghcr.io/linuxserver/mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD="${DB_ROOT_PW}"
      - MYSQL_DATABASE="${DB_NAME}"
      - MYSQL_USER="${DB_USER}"
      - MYSQL_PASSWORD="${DB_PW}"
      - TZ="${LOC_TZ}"
    networks:
      net:
        ipv4_address: 192.168.15.5
    ports:
        - 3307:3306
    volumes:
      - /home/numen/linadbsql:/docker-entrypoint-initdb.d
      - /home/numen/linadb:/config
    restart: unless-stopped

  # Django backend service
  be:
    container_name: linabe
    depends_on:
      - mariadb
    build:
      context: ./linabe
      dockerfile: Dockerfile_prod
    volumes:
      - ./linabe:/linabe
    networks:
      net:
        ipv4_address: 192.168.15.4
    ports:
      - 8001:8001
    environment:
      APP_DEBUG: '1'
      SECRET_KEY: "${SECRET_KEY}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PW: "${DB_PW}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_WAIT_TIME_OUT: "${DB_WAIT_TIME_OUT}"
      DB_WAIT_TIME_EXTRA: "${DB_WAIT_TIME_EXTRA}"
      LOC_TZ: "${LOC_TZ}"
      LOC_LG: "${LOC_LG}"
      TZ: "${LOC_TZ}"
    # command: gunicorn linapi.wsgi --bind 0.0.0.0:8001
      command: sh -c "python manage.py wait_for_db &&
                      python manage.py migrate --fake &&
                      gunicorn linapi.wsgi --bind 0.0.0.0:8001"
    stop_signal: SIGINT
    restart: unless-stopped

  # Nuxt frontend service
  fe:
    container_name: linafe
    depends_on:
      - be
    build:
      context: ./linafe
      dockerfile: Dockerfile_prod
    volumes:
      - ./linafe:/linafe
    environment:
      HOST: 0.0.0.0
      TZ: "${LOC_TZ}"
    networks:
      net:
        ipv4_address: 192.168.15.3
    ports:
      - 3001:3001
    command: npm run start
    restart: unless-stopped

  # Odoo 14
  odooweb:
    image: odoo:14
    container_name: odooweb
    environment:
    - HOST=odoodb
    - USER="${ODOODB_USER}"
    - PASSWORD="${ODOODB_PASSWORD}"
    depends_on:
      - odoodb
    ports:
      - "8069:8069"
    volumes:
      - odoo-web-data:/var/lib/odoo
      - /home/numen/odoo14/config:/etc/odoo
      - /home/numen/odoo14/extra-addons:/mnt/extra-addons
      - /home/numen/odoo14/numen-addons:/mnt/numen-addons
    networks:
      net:
        ipv4_address: 192.168.15.2

  # PostgresSQL for Odoo
  odoodb:
    image: postgres
    container_name: odoodb
    environment:
      - POSTGRES_DB="${ODOODB_NAME}"
      - POSTGRES_PASSWORD="${ODOODB_PASSWORD}"
      - POSTGRES_USER="${ODOODB_USER}"
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
    networks:
      net:
        ipv4_address: 192.168.15.6

  # Proxies requests to internal services Nginx Reverse Proxy
  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Panama
      - URL=vertigozl.net
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
    volumes:
      - /home/numen/swag:/config
    ports:
      - 443:443
      - 80:80
    networks:
      net:
        ipv4_address: 192.168.15.11
    depends_on:
        - be
        - fe
        - odooweb
    restart: unless-stopped

volumes:
  odoo-db-data:
  odoo-web-data:

networks:
  net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.15.0/28