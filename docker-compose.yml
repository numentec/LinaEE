version: '3'

services:
  # MariaDB service
  db:
    container_name: linadb
    image: linuxserver/mariadb:10.5.17
    # restart: on-failure:1
    restart: always
    environment: 
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PW}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_USER_PW}
      - TZ=${LOC_TZ}
    networks: 
      net:
        ipv4_address: 192.168.15.5
    ports: 
        - 3307:3306
    volumes: 
        - dbdata:/var/lib/mysql/data
        # - /etc/timezone:/etc/timezone:ro
        # - /etc/localtime:/etc/localtime:ro
     #   - ./initdb:/docker-entrypoint-initdb.d

  # Django backend service
  be:
    build:
      context: ./linabe
      dockerfile: Dockerfile
    image: ${IMAGE_BE}:${TAG}
    container_name: linabe
    env_file:
      - ./.env
    volumes:
      - ./linabe:/linabe
    networks: 
      net:
        ipv4_address: 192.168.15.4
    ports:
      - 8001:8001
    command: 'python ./manage.py runserver 0.0.0.0:8001'
    stop_signal: SIGINT
    depends_on:
      - db
    restart: unless-stopped

  # Nuxt frontend service
  fe:
    build:
      context: ./linafe
      dockerfile: Dockerfile
    image: ${IMAGE_FE}:${TAG}
    container_name: linafe
    environment:
      HOST: 0.0.0.0
      TZ: "${LOC_TZ}"
    networks: 
      net:
        ipv4_address: 192.168.15.3
    ports:
      - 3001:3001
    volumes:
      - ./linafe:/linafe

    command: 'npm run dev'
    depends_on:
      - be
    restart: unless-stopped

  # Perfil PROD como servicio separado, apuntando a la MISMA imagen
  fe_prod:
    image: ${IMAGE_FE}:${TAG}         # misma imagen construida arriba
    container_name: linafe_prod
    environment:
      HOST: 0.0.0.0
      TZ: "${LOC_TZ}"
    networks:
      net:
        ipv4_address: 192.168.15.13
    ports:
      - "3005:3005"
    # Sin vol√∫menes: ejecuta lo que trae la imagen
    command: "npm run start"
    depends_on:
      - be
    restart: unless-stopped


  # Redis service for Celery
  
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    networks: 
      net:
        ipv4_address: 192.168.15.6


  celery_worker:
    build:
      context: ./linabe
      dockerfile: Dockerfile
    image: linabe_celery_worker
    container_name: celeryworker
    command: /start-celeryworker
    networks: 
      net:
        ipv4_address: 192.168.15.7
    volumes:
      - ./linabe:/linabe
    env_file:
      - ./.env
    depends_on:
      - redis
      - db


  flower:
    build:
      context: ./linabe
      dockerfile: Dockerfile
    image: linabe_celery_flower
    container_name: celeryflower
    command: /start-flower
    volumes:
      - ./linabe:/linabe
    env_file:
      - ./.env
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db
    networks:
      net: 
        ipv4_address: 192.168.15.8


volumes:
  dbdata:
  linafe_node_modules:

networks:
  net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.15.0/28
